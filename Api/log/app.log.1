12:10:33.662 [restartedMain] INFO   Springboot.Api.ApiApplication -Starting ApiApplication using Java 21.0.2 with PID 24604 (C:\Users\harithasri\Downloads\Api\Api\target\classes started by harithasri in C:\Users\harithasri\Downloads\Api)
12:10:33.675 [restartedMain] DEBUG  Springboot.Api.ApiApplication -Running with Spring Boot v3.2.1, Spring v6.1.2
12:10:33.675 [restartedMain] INFO   Springboot.Api.ApiApplication -No active profile set, falling back to 1 default profile: "default"
12:10:34.290 [restartedMain] INFO   o.s.d.r.c.RepositoryConfigurationDelegate -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
12:10:34.305 [restartedMain] INFO   o.s.d.r.c.RepositoryConfigurationDelegate -Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
12:10:34.854 [restartedMain] INFO   o.s.b.w.e.tomcat.TomcatWebServer -Tomcat initialized with port 8080 (http)
12:10:34.856 [restartedMain] INFO   o.a.coyote.http11.Http11NioProtocol -Initializing ProtocolHandler ["http-nio-8080"]
12:10:34.857 [restartedMain] INFO   o.a.catalina.core.StandardService -Starting service [Tomcat]
12:10:34.858 [restartedMain] INFO   o.a.catalina.core.StandardEngine -Starting Servlet engine: [Apache Tomcat/10.1.17]
12:10:34.923 [restartedMain] INFO   o.a.c.c.C.[Tomcat].[localhost].[/] -Initializing Spring embedded WebApplicationContext
12:10:34.924 [restartedMain] INFO   o.s.b.w.s.c.ServletWebServerApplicationContext -Root WebApplicationContext: initialization completed in 1244 ms
12:10:35.011 [restartedMain] INFO   org.mongodb.driver.client -MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync", "version": "4.11.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/21.0.2+13-58"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@4e69b761, com.mongodb.Jep395RecordCodecProvider@31b558b5, com.mongodb.KotlinCodecProvider@50322c4e]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
12:10:35.046 [cluster-ClusterId{value='65d98f6382a06b1a702af418', description='null'}-localhost:27017] INFO   org.mongodb.driver.cluster -Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=25954900}
12:10:35.087 [restartedMain] INFO   o.s.b.d.a.OptionalLiveReloadServer -LiveReload server is running on port 35729
12:10:36.369 [restartedMain] INFO   o.s.s.web.DefaultSecurityFilterChain -Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@16be9fd6, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4a0f02aa, org.springframework.security.web.context.SecurityContextHolderFilter@7d13a2a, org.springframework.security.web.header.HeaderWriterFilter@e713ed, org.springframework.web.filter.CorsFilter@679c8516, org.springframework.security.web.authentication.logout.LogoutFilter@691841b2, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@3d005c15, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4944a171, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5fd63f7c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@58438d04, org.springframework.security.web.access.ExceptionTranslationFilter@7f1d3326, org.springframework.security.web.access.intercept.AuthorizationFilter@6bf8c8dd]
12:10:36.572 [restartedMain] INFO   o.a.coyote.http11.Http11NioProtocol -Starting ProtocolHandler ["http-nio-8080"]
12:10:36.586 [restartedMain] INFO   o.s.b.w.e.tomcat.TomcatWebServer -Tomcat started on port 8080 (http) with context path ''
12:10:36.594 [restartedMain] INFO   Springboot.Api.ApiApplication -Started ApiApplication in 3.027 seconds (process running for 67.647)
12:10:36.597 [restartedMain] INFO   o.s.b.d.a.ConditionEvaluationDeltaLoggingListener -Condition evaluation delta:


==========================
CONDITION EVALUATION DELTA
==========================


Positive matches:
-----------------

   MongoDataAutoConfiguration#mongoConnectionDetails matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.mongo.MongoConnectionDetails; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.MongoDatabaseFactory; SearchStrategy: all) found beans of type 'org.springframework.data.mongodb.MongoDatabaseFactory' mongoDbFactory (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataConfiguration#mongoCustomConversions:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.convert.MongoCustomConversions; SearchStrategy: all) found beans of type 'org.springframework.data.mongodb.core.convert.MongoCustomConversions' customConversions (OnBeanCondition)

   MongoDataConfiguration#mongoManagedTypes:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.MongoManagedTypes; SearchStrategy: all) found beans of type 'org.springframework.data.mongodb.MongoManagedTypes' mongoManagedTypes (OnBeanCondition)

   MongoDataConfiguration#mongoMappingContext:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.mapping.MongoMappingContext; SearchStrategy: all) found beans of type 'org.springframework.data.mongodb.core.mapping.MongoMappingContext' mongoMappingContext (OnBeanCondition)

   MongoDatabaseFactoryConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.MongoDatabaseFactory; SearchStrategy: all) found beans of type 'org.springframework.data.mongodb.MongoDatabaseFactory' mongoDbFactory (OnBeanCondition)

   MongoDatabaseFactoryDependentConfiguration#mappingMongoConverter:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.convert.MongoConverter; SearchStrategy: all) found beans of type 'org.springframework.data.mongodb.core.convert.MongoConverter' mappingMongoConverter (OnBeanCondition)

   MongoDatabaseFactoryDependentConfiguration#mongoTemplate:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.MongoOperations; SearchStrategy: all) found beans of type 'org.springframework.data.mongodb.core.MongoOperations' mongoTemplate (OnBeanCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean,org.springframework.data.mongodb.repository.config.MongoRepositoryConfigurationExtension; SearchStrategy: all) found beans of type 'org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean' &productRepository and found beans of type 'org.springframework.data.mongodb.repository.config.MongoRepositoryConfigurationExtension' org.springframework.data.mongodb.repository.config.MongoRepositoryConfigurationExtension#0 (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'com.mongodb.client.MongoClient', 'org.springframework.data.mongodb.repository.MongoRepository' (OnClassCondition)
         - @ConditionalOnRepositoryType configured type of 'AUTO' matched required type (OnRepositoryTypeCondition)

   SpringBootWebSecurityConfiguration.SecurityFilterChainConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) found beans of type 'org.springframework.security.web.SecurityFilterChain' securityFilterChain; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass found required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)

   SpringBootWebSecurityConfiguration.WebSecurityEnablerConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (names: springSecurityFilterChain; SearchStrategy: all) found beans named springSecurityFilterChain (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationManager,org.springframework.security.authentication.AuthenticationProvider,org.springframework.security.core.userdetails.UserDetailsService,org.springframework.security.authentication.AuthenticationManagerResolver,org.springframework.security.oauth2.jwt.JwtDecoder; SearchStrategy: all) found beans of type 'org.springframework.security.core.userdetails.UserDetailsService' userDetailsService (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.AuthenticationManager'; @ConditionalOnMissingClass did not find unwanted classes 'org.springframework.security.oauth2.client.registration.ClientRegistrationRepository', 'org.springframework.security.oauth2.server.resource.introspection.OpaqueTokenIntrospector', 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    None



